name: Build and Push Image for Folder2

on:
  push:
    tags:
      - '*'
    paths:
      - devcontainers/go-grpc/Dockerfile

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract Git tag
        id: get_tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          # elif [[ $GITHUB_REF == refs/heads/* ]]; then
          #   sanitized_branch=${GITHUB_REF#refs/heads/}
          #   sanitized_branch=${sanitized_branch//\//-}  # Replace / with -
          #   echo "tag=${sanitized_branch}" >> $GITHUB_ENV
          # else
          #   echo "tag=${GITHUB_SHA::7}" >> $GITHUB_ENV
          fi

      - name: Extract short commit hash
        id: get_commit
        run: echo "commit_hash=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set image name
        run: echo "IMAGE_NAME=dev-go-npm-grpc-java-android" >> $GITHUB_ENV

      - name: Log in to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        run: |
          TAG=${{ env.tag || env.commit_hash }}
          IMAGE=ghcr.io/${{ github.repository }}/$IMAGE_NAME:$TAG
          cd devcontainers/go-grpc
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Set image name
        run: echo "IMAGE_NAME=dev-go-npm-grpc" >> $GITHUB_ENV

      - name: Build and Push Docker image
        run: |
          TAG=${{ env.tag || env.commit_hash }}
          IMAGE=ghcr.io/${{ github.repository }}/$IMAGE_NAME:$TAG
          cd devcontainers/go-grpc
          docker build --target dev-go-npm-grpc -t $IMAGE .
          docker push $IMAGE

 
